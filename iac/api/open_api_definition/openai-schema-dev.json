{
  "openapi": "3.0.0",
  "info": {
    "title": "Azure OpenAI Service API",
    "description": "Azure OpenAI APIs for completions and search",
    "version": "2025-01-01-preview"
  },
  "servers": [
    {
      "url": "https://{apimName}-openai-{env}.azure-api.net/openai",
      "variables": {
        "apimName": {
          "default": "square-graph"
        },
        "env": {
          "default": "dev"
        }
      }
    }
  ],
  "security": [
    {
      "bearer": [
        "api.read"
      ]
    },
    {
      "apiKey": []
    }
  ],
  "paths": {
    "/deployments/{deployment-id}/completions": {
      "post": {
        "summary": "Creates a completion for the provided prompt, parameters and chosen model.",
        "operationId": "Completions_Create",
        "parameters": [
          {
            "in": "path",
            "name": "deployment-id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "davinci",
              "description": "Deployment id of the model which was deployed."
            }
          },
          {
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2025-01-01-preview",
              "description": "api version"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createCompletionRequest"
              },
              "example": {
                "prompt": "Negate the following sentence.The price for bubblegum increased on thursday.\n\n Negated Sentence:",
                "max_tokens": 50
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createCompletionResponse"
                },
                "example": {
                  "model": "davinci",
                  "object": "text_completion",
                  "id": "cmpl-4509KAos68kxOqpE2uYGw81j6m7uo",
                  "created": 1637097562,
                  "choices": [
                    {
                      "index": 0,
                      "text": "The price for bubblegum decreased on thursday.",
                      "logprobs": null,
                      "finish_reason": "stop"
                    }
                  ]
                }
              }
            },
            "headers": {
              "apim-request-id": {
                "description": "Request ID for troubleshooting purposes",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "headers": {
              "apim-request-id": {
                "description": "Request ID for troubleshooting purposes",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-ms-examples": {
          "Create a completion.": {
            "$ref": "./examples/completions.json"
          }
        }
      }
    },
    "/deployments/{deployment-id}/embeddings": {
      "post": {
        "summary": "Get a vector representation of a given input that can be easily consumed by machine learning models and algorithms.",
        "operationId": "embeddings_create",
        "parameters": [
          {
            "in": "path",
            "name": "deployment-id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "ada-search-index-v1"
            },
            "description": "The deployment id of the model which was deployed."
          },
          {
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2025-01-01-preview",
              "description": "api version"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "properties": {
                  "input": {
                    "description": "Input text to embed, encoded as a string or array of tokens. To embed multiple inputs in a single request, pass an array of strings or array of token arrays. The input must not exceed the max input tokens for the model (8192 tokens for `text-embedding-ada-002`), cannot be an empty string, and any array must be 2048 dimensions or less.",
                    "oneOf": [
                      {
                        "type": "string",
                        "default": "",
                        "example": "This is a test.",
                        "nullable": true
                      },
                      {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 2048,
                        "items": {
                          "type": "string",
                          "minLength": 1,
                          "example": "This is a test.",
                          "nullable": false
                        }
                      }
                    ]
                  },
                  "user": {
                    "description": "A unique identifier representing your end-user, which can help monitoring and detecting abuse.",
                    "type": "string",
                    "nullable": false
                  },
                  "input_type": {
                    "description": "input type of embedding search to use",
                    "type": "string",
                    "example": "query"
                  },
                  "encoding_format": {
                    "description": "The format to return the embeddings in. Can be either `float` or `base64`. Defaults to `float`.",
                    "type": "string",
                    "example": "float",
                    "nullable": true
                  },
                  "dimensions": {
                    "description": "The number of dimensions the resulting output embeddings should have. Only supported in `text-embedding-3` and later models.",
                    "type": "integer",
                    "example": 1,
                    "nullable": true
                  }
                },
                "required": [
                  "input"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": {
                      "type": "string"
                    },
                    "model": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "index": {
                            "type": "integer"
                          },
                          "object": {
                            "type": "string"
                          },
                          "embedding": {
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          }
                        },
                        "required": [
                          "index",
                          "object",
                          "embedding"
                        ]
                      }
                    },
                    "usage": {
                      "type": "object",
                      "properties": {
                        "prompt_tokens": {
                          "type": "integer"
                        },
                        "total_tokens": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "prompt_tokens",
                        "total_tokens"
                      ]
                    }
                  },
                  "required": [
                    "object",
                    "model",
                    "data",
                    "usage"
                  ]
                }
              }
            }
          }
        },
        "x-ms-examples": {
          "Create a embeddings.": {
            "$ref": "./examples/embeddings.json"
          }
        }
      }
    },
    "/deployments/{deployment-id}/chat/completions": {
      "post": {
        "summary": "Creates a completion for the chat message",
        "operationId": "ChatCompletions_Create",
        "parameters": [
          {
            "in": "path",
            "name": "deployment-id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Deployment id of the model which was deployed."
            }
          },
          {
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2025-01-01-preview",
              "description": "api version"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createChatCompletionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/createChatCompletionResponse"
                    },
                    {
                      "$ref": "#/components/schemas/createChatCompletionStreamResponse"
                    }
                  ]
                }
              }
            },
            "headers": {
              "apim-request-id": {
                "description": "Request ID for troubleshooting purposes",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Service unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "headers": {
              "apim-request-id": {
                "description": "Request ID for troubleshooting purposes",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-ms-examples": {
          "Create a chat completion.": {
            "$ref": "./examples/chat_completions.json"
          },
          "Creates a completion based on Azure Search data and system-assigned managed identity.": {
            "$ref": "./examples/chat_completions_azure_search_minimum.json"
          },
          "Creates a completion based on Azure Search image vector data.": {
            "$ref": "./examples/chat_completions_azure_search_image_vector.json"
          },
          "Creates a completion based on Azure Search vector data, previous assistant message and user-assigned managed identity.": {
            "$ref": "./examples/chat_completions_azure_search_advanced.json"
          },
          "Creates a completion for the provided Azure Cosmos DB.": {
            "$ref": "./examples/chat_completions_cosmos_db.json"
          },
          "Creates a completion for the provided Mongo DB.": {
            "$ref": "./examples/chat_completions_mongo_db.json"
          },
          "Creates a completion for the provided Elasticsearch.": {
            "$ref": "./examples/chat_completions_elasticsearch.json"
          },
          "Creates a completion for the provided Pinecone resource.": {
            "$ref": "./examples/chat_completions_pinecone.json"
          }
        }
      }
    }
  }
}